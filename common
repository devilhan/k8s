 k8s用于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简单并且高效（powerful）,Kubernetes提供了应用部署，规划，更新，维护的一种机制。
 
 比如用户想让应用一直运行，用户不需要关心怎么去做，Kubernetes会自动去监控，然后去重启，新建，总之，让应用一直提供服务
 
 文档地址：http://docs.kubernetes.org.cn/227.html
 
 Pod 豆荚 ： k8s 最小可部署单元 包多个container  每个pod中有一个pause --可以用来做数据卷，也可以用来网络命名空间的共享
 Container
 Label   用于标识pod ，service 发现pod
 Replication Controller  复制控制器
 Service  服务发现
 Node //可有多个pod 
 Kubernetes Master  主服务器
 
 
 每个node 都必须有三个组件：kubelet  -- 用于执行k8s的命令  kube-proxy 代理 用于各个pod间的通信  docker--略过
 
 安装：
  使用kubeadmin 通过离线镜像安装
  使用阿里云工友云平台K8S，钞能力
  通过yum官方仓库安装，上古版本
  二进制包的形式进行安装，kubeasz(github)
  
  
  环境准备：
    CentOS 7 Master * 1
    CentOS 7 Node * 2
    
    1.  设置主机名与时区
    timedatectl set-timezone Asia/Shanghai  #都要执行
    hostnamectl set-hostname master   
    hostnamectl set-hostname node1    
    hostnamectl set-hostname node2   

    2. 添加hosts网络主机配置,三台虚拟机都要设置
    vim /etc/hosts
    192.168.255.131 master
    192.168.255.132 node1
    192.168.255.133 node2

    3. 关闭防火墙，三台虚拟机都要设置，生产环境跳过这一步
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
    setenforce 0
    systemctl disable firewalld
    systemctl stop firewalld
    
   kubeadmin 加载k8s镜像： 
   
     1. 将镜像包上传至服务器每个节点
    mkdir /usr/local/k8s-install
    cd /usr/local/k8s-install
    XFTP上传安装文件

    2. 按每个Centos上安装Docker
    tar -zxvf docker-ce-18.09.tar.gz
    cd docker 
    yum localinstall -y *.rpm
    systemctl start docker
    systemctl enable docker

    3. 确保从cgroups均在同一个从groupfs
    #cgroups是control groups的简称，它为Linux内核提供了一种任务聚集和划分的机制，通过一组参数集合将一些任务组织成一个或多个子系统。   
    #cgroups是实现IaaS虚拟化(kvm、lxc等)，PaaS容器沙箱(Docker等)的资源管理控制部分的底层基础。
    #子系统是根据cgroup对任务的划分功能将任务按照一种指定的属性划分成的一个组，主要用来实现资源的控制。
    #在cgroup中，划分成的任务组以层次结构的形式组织，多个子系统形成一个数据结构中类似多根树的结构。cgroup包含了多个孤立的子系统，每一个子系统代表单一的资源

    docker info | grep cgroup 

    如果不是groupfs,执行下列语句  *此处容易有坑

    cat << EOF > /etc/docker/daemon.json
    {
      "exec-opts": ["native.cgroupdriver=cgroupfs"]
    }
    EOF
    systemctl daemon-reload && systemctl restart docker

    4. 安装kubeadm
    # kubeadm是集群部署工具

    cd /usr/local/k8s-install/kubernetes-1.14
    tar -zxvf kube114-rpm.tar.gz
    cd kube114-rpm
    yum localinstall -y *.rpm

    5. 关闭交换区
    swapoff -a
    vi /etc/fstab 
    #swap一行注释

    6. 配置网桥

    cat <<EOF >  /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    EOF
    sysctl --system

    7. 通过镜像安装k8s

    cd /usr/local/k8s-install/kubernetes-1.14
    docker load -i k8s-114-images.tar.gz
    docker load -i flannel-dashboard.tar.gz

  利用kubeadm 部署k8s集群：

    1. master主服务器配置
    kubeadm init --kubernetes-version=v1.14.1 --pod-network-cidr=10.244.0.0/16

    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

    kubectl get nodes
    #查看存在问题的pod
    kubectl get pod --all-namespaces
    #设置全局变量
    #安装flannel网络组件
    kubectl create -f kube-flannel.yml
    
    *此处有坑
     flnnal
     查看是否已配置hosts
     查看flannel 日志：
      kubectl get all --all-namespaces -o wide
      kubectl logs -f coredns-56f56989d6-krs6h -n kube-system

    2. 加入NODE节点
    kubeadm join 192.168.4.130:6443 --token 911xit.xkp2gfxbvf5wuqz7 \
        --discovery-token-ca-cert-hash sha256:23db3094dc9ae1335b25692717c40e24b1041975f6a43da9f43568f8d0dbac72
     

    如果忘记
    在master 上执行kubeadm token list 查看 ，在node上运行
    kubeadm join 192.168.163.132:6443 --token aoeout.9k0ybvrfy09q1jf6 --discovery-token-unsafe-skip-ca-verification
    
    如果过期
    kubeadm token create
    openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^*//

    kubectl get nodes

    3. Master开启仪表盘
    kubectl apply -f kubernetes-dashboard.yaml
    kubectl apply -f admin-role.yaml
    kubectl apply -f kubernetes-dashboard-admin.rbac.yaml
    kubectl -n kube-system get svc
    http://192.168.163.132:32000 访问

    使用dashboard 部署容器 eg. tomcat
    
    使用Deployment 脚本部署集群  eg. tomcat
       支持yml格式部署脚本
       常用命令：
         kubectl create -f yml文件 #创建部署
         kubectl apply -f yml文件  #更新部署配置
         kubectl get pod [-o wide] #查看已部署pod
         kubectl describe pod podName #查看pod详细信息
         kubectl logs [-f] podName #查看pod输出日志
         
    基于NFS文件集群共享：采用RPC机制实现文件传输
      master 主节点：
        yum install -y nfs-utils rpcbind
        启动并设置开机启动：nfs & rpcbind
        查看文件：exportfs
     node 分节点：
       只安装 nfs-utils即可 设置开机自启
       查看对外共享文件夹：showmount -e master-ip
       远程目录挂载：mount master-ip:master-file-path node-path
         
   查看已部署的：kubectl get deployment
       修改deploymnet
   
   添加数据卷：
   apiVersion: extensions/v1beta1
   kind: Deployment
   metadata:
    name: tomcat-deploy
   spec:
    replicas: 2
    template:
     metadata:
      labels:
       app: tomcat-cluster
     spec:
      volumes:
      - name: web-app
        hostPath:
          path: /mnt
      containers:
      - name: tomcat-cluster
        image: tomcat:8
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: web-app
          mountPath: /usr/local/tomcat/webapps
        
      service注释掉nodeport之后就可以直接使用8000端口进行service物理机访问，负载均衡
      Rinted - 端口转发工具 重定向传输控制协议工具
               可将源IP端口数据转发到目标IP端口
               在k8s中用于将service 服务对外暴露
      
      
     
    
    
